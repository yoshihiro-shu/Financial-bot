services:

  etcd1:
    image: bitnami/etcd:3.5.9
    restart: always
    environment:
      - ETCD_NAME=etcd1
      - ETCD_INITIAL_ADVERTISE_PEER_URLS=http://etcd1:12380
      - ETCD_LISTEN_PEER_URLS=http://0.0.0.0:12380
      - ETCD_LISTEN_CLIENT_URLS=http://0.0.0.0:12379
      - ETCD_ADVERTISE_CLIENT_URLS=http://etcd1:12379
      - ETCD_INITIAL_CLUSTER=etcd1=http://etcd1:12380,etcd2=http://etcd2:22380
      - ETCD_INITIAL_CLUSTER_TIMEOUT=5000
      - ETCD_INITIAL_CLUSTER_STATE=new
      - ETCD_ROOT_PASSWORD=""
      # - ALLOW_NONE_AUTHENTICATION=yes
    volumes:
      - ./tmp/etcd1:/bitnami/etcd
    ports:
      - 12379:12379
    networks:
      - financial-bot-network

  etcd2:
    image: bitnami/etcd:3.5.9
    restart: always
    environment:
      - ETCD_NAME=etcd2
      - ETCD_INITIAL_ADVERTISE_PEER_URLS=http://etcd2:22380
      - ETCD_LISTEN_PEER_URLS=http://0.0.0.0:22380
      - ETCD_LISTEN_CLIENT_URLS=http://0.0.0.0:22379
      - ETCD_ADVERTISE_CLIENT_URLS=http://etcd2:22379
      - ETCD_INITIAL_CLUSTER=etcd1=http://etcd1:12380,etcd2=http://etcd2:22380
      - ETCD_INITIAL_CLUSTER_TIMEOUT=5000
      - ETCD_INITIAL_CLUSTER_STATE=new
      - ETCD_ROOT_PASSWORD=""
      # - ALLOW_NONE_AUTHENTICATION=yes
    volumes:
      - ./tmp/etcd2:/bitnami/etcd
    ports:
      - 22379:22379
    networks:
      - financial-bot-network

  postgres:
    image: postgres:16.0
    restart: always
    environment:
      - POSTGRES_DB=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=password
      - PGUSER=postgres
      - TZ=Asia/Tokyo
    ports:
      - 5432:5432
    volumes:
      - ./tmp/postgresql/data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready", "-q", "-U", "${POSTGRES_USER}", "-d", "${POSTGRES_DB}"]
      interval: 1s
      timeout: 1s
      retries: 5
    networks:
      - financial-bot-network

  migration:
    image: yoshi429/goose-migration:0.0.3
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      - ./db/migrations:/go/src/db
    environment:
      - DB_NAME=postgres
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_USER=postgres
      - DB_PASSWORD=password
      - DB_SSL=disable
    networks:
      - financial-bot-network

  kafka:
    image: docker.io/bitnami/kafka:3.7
    ports:
      - "9092:9092"
    volumes:
     - "./tmp/kafka:/bitnami"
    environment:
      # KRaft settings
      - KAFKA_CFG_NODE_ID=0
      - KAFKA_CFG_PROCESS_ROLES=controller,broker
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=0@kafka:9093
      # Listeners
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://localhost:9092
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_CFG_INTER_BROKER_LISTENER_NAME=PLAINTEXT

networks:
  financial-bot-network:
    external: true
    driver: bridge